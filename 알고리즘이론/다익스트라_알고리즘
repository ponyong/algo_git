그래프 이론

최단거리를 구하는 알고리즘 

<핵심 이론>
하나의 시작정점에서 다른 모든 정점으로의 최단거리를 계산하는것 

<핵심 변수>
distance[]  // 최단 거리를 저장할 변수
check[]     // 해당 정점을 방문했는지 체크할 변수

<알고리즘의 진행 순서>

1. 거리 배열(distance)를 가장 큰 값으로 초기화 

2. - 시작 정점의 거리를 0으로 변경
   - 시작 정점의 check 값을 true로 변경
   
3. 시작 정점과 연결 된 정점들의 distance 값을 갱신

4. 방문하지 않은 노드 중 distance 값이 최소인 정점을 탐색( Greedy )

5. 찾은 정점의 check 값을 true로 변경
      찾은 정점의 연결된 노드들의 distance을
      해당 정점의 현재 값과 계산한 값을 비교하여 더 작은 값으로 갱신
      
모든 노드를 방문 할 때까지 반복 실행

<개선해야 할 사항>

정점의 개수가 일정 이상 커지게 되면 O(n^2) 의 시간이 소요되기 때문에
시간 초과 문제를 간과할 수 없음 

최소 값을 찾는 과정에서 우선순위 큐를 사용하여 검색 시간을 O(logN)으로 해결

************************************

	


